[2023-07-31 14:38:40,119] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: s3_to_postgres.load_stations_data manual__2023-07-31T14:38:16.743384+00:00 [queued]>
[2023-07-31 14:38:40,134] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: s3_to_postgres.load_stations_data manual__2023-07-31T14:38:16.743384+00:00 [queued]>
[2023-07-31 14:38:40,134] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-07-31 14:38:40,134] {taskinstance.py:1357} INFO - Starting attempt 1 of 1
[2023-07-31 14:38:40,134] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-07-31 14:38:40,166] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): load_stations_data> on 2023-07-31 14:38:16.743384+00:00
[2023-07-31 14:38:40,185] {standard_task_runner.py:52} INFO - Started process 7242 to run task
[2023-07-31 14:38:40,189] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 's3_to_postgres', 'load_stations_data', 'manual__2023-07-31T14:38:16.743384+00:00', '--job-id', '130', '--raw', '--subdir', 'DAGS_FOLDER/dag.py', '--cfg-path', '/tmp/tmpp5awcqeu', '--error-file', '/tmp/tmpj1x5e1qu']
[2023-07-31 14:38:40,189] {standard_task_runner.py:80} INFO - Job 130: Subtask load_stations_data
[2023-07-31 14:38:40,270] {task_command.py:370} INFO - Running <TaskInstance: s3_to_postgres.load_stations_data manual__2023-07-31T14:38:16.743384+00:00 [running]> on host 8aac46936356
[2023-07-31 14:38:40,387] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=s3_to_postgres
AIRFLOW_CTX_TASK_ID=load_stations_data
AIRFLOW_CTX_EXECUTION_DATE=2023-07-31T14:38:16.743384+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-07-31T14:38:16.743384+00:00
[2023-07-31 14:39:05,082] {logging_mixin.py:115} INFO - Dataframe of the day done !
[2023-07-31 14:39:05,319] {python.py:173} INFO - Done. Returned value was:         stationCode  month  hour  ...  day        lat  minute
0             11026      7    22  ...   30  48.861125      30
1             32604      7    22  ...   30  48.881287      30
2             19024      7    22  ...   30  48.877951      30
3             41601      7    22  ...   30  48.839109      30
4              9010      7    22  ...   30  48.876720      30
...             ...    ...   ...  ...  ...        ...     ...
393385        24001      7    16  ...   31  48.897910      30
393386        22016      7    16  ...   31  48.879919      30
393387        14136      7    16  ...   31  48.825770      30
393388         8025      7    16  ...   31  48.873722      30
393389        32302      7    16  ...   31  48.877141      30

[393390 rows x 11 columns]
[2023-07-31 14:39:05,952] {xcom.py:585} ERROR - Could not serialize the XCom value into JSON. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config.
[2023-07-31 14:39:05,953] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 2392, in xcom_push
    session=session,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 197, in set
    map_index=map_index,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 582, in serialize_value
    return json.dumps(value).encode('UTF-8')
  File "/usr/local/lib/python3.7/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
[2023-07-31 14:39:06,023] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=s3_to_postgres, task_id=load_stations_data, execution_date=20230731T143816, start_date=20230731T143840, end_date=20230731T143906
[2023-07-31 14:39:06,082] {standard_task_runner.py:97} ERROR - Failed to execute job 130 for task load_stations_data (Object of type DataFrame is not JSON serializable; 7242)
[2023-07-31 14:39:06,205] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-07-31 14:39:06,266] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
