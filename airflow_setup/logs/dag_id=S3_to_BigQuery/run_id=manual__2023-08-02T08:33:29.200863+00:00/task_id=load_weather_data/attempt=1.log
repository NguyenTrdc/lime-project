[2023-08-02 08:33:31,404] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: S3_to_BigQuery.load_weather_data manual__2023-08-02T08:33:29.200863+00:00 [queued]>
[2023-08-02 08:33:31,412] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: S3_to_BigQuery.load_weather_data manual__2023-08-02T08:33:29.200863+00:00 [queued]>
[2023-08-02 08:33:31,412] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-08-02 08:33:31,412] {taskinstance.py:1357} INFO - Starting attempt 1 of 2
[2023-08-02 08:33:31,412] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-08-02 08:33:31,439] {taskinstance.py:1377} INFO - Executing <Task(PythonOperator): load_weather_data> on 2023-08-02 08:33:29.200863+00:00
[2023-08-02 08:33:31,444] {standard_task_runner.py:52} INFO - Started process 7494 to run task
[2023-08-02 08:33:31,447] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'S3_to_BigQuery', 'load_weather_data', 'manual__2023-08-02T08:33:29.200863+00:00', '--job-id', '261', '--raw', '--subdir', 'DAGS_FOLDER/dag.py', '--cfg-path', '/tmp/tmpkvvhcg7b', '--error-file', '/tmp/tmp2gg2_lpd']
[2023-08-02 08:33:31,448] {standard_task_runner.py:80} INFO - Job 261: Subtask load_weather_data
[2023-08-02 08:33:31,538] {task_command.py:370} INFO - Running <TaskInstance: S3_to_BigQuery.load_weather_data manual__2023-08-02T08:33:29.200863+00:00 [running]> on host 656341a29da6
[2023-08-02 08:33:32,359] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=***
AIRFLOW_CTX_DAG_ID=S3_to_BigQuery
AIRFLOW_CTX_TASK_ID=load_weather_data
AIRFLOW_CTX_EXECUTION_DATE=2023-08-02T08:33:29.200863+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2023-08-02T08:33:29.200863+00:00
[2023-08-02 08:33:32,969] {logging_mixin.py:115} INFO - 
DataFrame push into xcom.
[2023-08-02 08:33:32,993] {logging_mixin.py:115} INFO - 
DATAFRAME SHAPE : (13, 11)
[2023-08-02 08:33:32,993] {logging_mixin.py:115} INFO - 
✅ DataFrame created ! ✅
[2023-08-02 08:33:32,995] {python.py:173} INFO - Done. Returned value was:     precipitation  rain  ... snow_depth               time_period
0             0.8   0.3  ...        0.0 2023-08-01 16:30:00+02:00
1             0.8   0.3  ...        0.0 2023-08-01 17:00:00+02:00
2             0.8   0.3  ...        0.0 2023-08-01 17:00:00+02:00
3             0.8   0.3  ...        0.0 2023-08-01 17:30:00+02:00
4             0.8   0.3  ...        0.0 2023-08-01 17:30:00+02:00
5             0.8   0.3  ...        0.0 2023-08-01 23:30:00+02:00
6             0.8   0.3  ...        0.0 2023-08-01 23:30:00+02:00
7             0.8   0.3  ...        0.0 2023-08-01 23:30:00+02:00
8             0.8   0.3  ...        0.0 2023-08-01 23:30:00+02:00
9             0.8   0.3  ...        0.0 2023-08-02 00:00:00+02:00
10            0.8   0.3  ...        0.0 2023-08-02 00:30:00+02:00
11            0.8   0.3  ...        0.0 2023-08-02 01:00:00+02:00
12            0.8   0.3  ...        0.0 2023-08-02 01:30:00+02:00

[13 rows x 11 columns]
[2023-08-02 08:33:33,362] {xcom.py:585} ERROR - Could not serialize the XCom value into JSON. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config.
[2023-08-02 08:33:33,363] {taskinstance.py:1889} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/taskinstance.py", line 2392, in xcom_push
    session=session,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/utils/session.py", line 68, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 197, in set
    map_index=map_index,
  File "/home/airflow/.local/lib/python3.7/site-packages/airflow/models/xcom.py", line 582, in serialize_value
    return json.dumps(value).encode('UTF-8')
  File "/usr/local/lib/python3.7/json/__init__.py", line 231, in dumps
    return _default_encoder.encode(obj)
  File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type DataFrame is not JSON serializable
[2023-08-02 08:33:33,382] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=S3_to_BigQuery, task_id=load_weather_data, execution_date=20230802T083329, start_date=20230802T083331, end_date=20230802T083333
[2023-08-02 08:33:34,091] {standard_task_runner.py:97} ERROR - Failed to execute job 261 for task load_weather_data (Object of type DataFrame is not JSON serializable; 7494)
[2023-08-02 08:33:34,109] {local_task_job.py:156} INFO - Task exited with return code 1
[2023-08-02 08:33:34,180] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
